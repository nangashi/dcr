name: terraform docs

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - terragrunt/modules/**

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    defaults:
      run:
        working-directory: terragrunt/modules/
    steps:
    - name: Checkout target branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    # - name: Render terraform docs and push changes back to PR
    #   id: terraform-docs
    #   uses: terraform-docs/gh-actions@main
    #   with:
    #     find-dir: terragrunt/modules/
    #     output-file: README.md
    #     output-method: inject
    #     git-push: true
    #     git-commit-message: update terraform docs

    # - name: Add comment to PR
    #   if: steps.terraform-docs.outputs.num_changed > 0
    #   uses: thollander/actions-comment-pull-request@v2
    #   with:
    #     message: Terraform Docs is updated.(num_changed = ${{ steps.terraform-docs.outputs.num_changed }})

    - name: Terraform Format
      id: fmt
      # run: |
      #   echo 'STDOUT<<EOF' >> "$GITHUB_ENV"
      #   terraform fmt -check -recursive -diff >> "$GITHUB_ENV"
      #   echo 'EOF' >> "$GITHUB_ENV"
      # working-directory: terragrunt/modules/
      uses: gh640/command-result-action@v1
      with:
        command: terraform fmt -check -recursive -diff
        cwd: terragrunt/modules/
      continue-on-error: true

    # - run: echo "${{ toJSON(steps) }}"
    # - run: echo '${{ toJSON(steps.fmt) }}'
    # - run: echo '${{ toJSON(steps.fmt.outputs) }}'
    # - run: echo ${{ env.STDOUT }}
    # - run: echo $STDOUT
    # - run: echo ${{ steps.fmt.outputs.exitcode }}
    # # - run: echo ${{ steps.terraform-docs.outputs.num_changed }}
    # # - run: echo ${{ steps.terraform-docs.outputs }}

    # - name: Post Format
    #   if: always() && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
    #   uses: robburger/terraform-pr-commenter@v1
    #   with:
    #     commenter_type: fmt
    #     commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
    #     commenter_exitcode: 1

    - name: Add comment to PR
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          <details>
          <summary>terraform fmt: ${{ steps.fmt.outputs.exitCode == 0 && '✅' || '❌' }}</summary>

          ```patch
          ${{ steps.fmt.outputs.stdout }}
          ```

          </details>


    # - name: Terraform Init
    #   id: init
    #   run: terraform init

    # - name: Post Init
    #   # if: always() && github.ref != 'refs/heads/master' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
    #   uses: robburger/terraform-pr-commenter@v1
    #   with:
    #     commenter_type: init
    #     commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
    #     commenter_exitcode: ${{ steps.init.outputs.exitcode }}

    # - name: Terraform Validate
    #   id: validate
    #   run: terraform validate

    # - name: Post Validate
    #   # if: always() && github.ref != 'refs/heads/master' && (steps.validate.outcome == 'success' || steps.validate.outcome == 'failure')
    #   uses: robburger/terraform-pr-commenter@v1
    #   with:
    #     commenter_type: validate
    #     commenter_input: ${{ format('{0}{1}', steps.validate.outputs.stdout, steps.validate.outputs.stderr) }}
    #     commenter_exitcode: ${{ steps.validate.outputs.exitcode }}

    # - name: Terraform Plan
    #   id: plan
    #   run: terraform plan -out workspace.plan

    # - name: Post Plan
    #   # if: always() && github.ref != 'refs/heads/master' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
    #   uses: robburger/terraform-pr-commenter@v1
    #   with:
    #     commenter_type: plan
    #     commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
    #     commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
