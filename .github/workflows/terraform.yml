name: terraform docs

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - terragrunt/modules/**

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    permissions:
      pull-requests: write
    # defaults:
      # run
        # working-directory: terragrunt/modules/
    steps:

    - name: Checkout target branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    # - run: echo "::add-matcher::.github/matcher.json"

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - uses: hashicorp/setup-terraform@v3
    - uses: autero1/action-terragrunt@v1.3.2
      with:
        terragrunt_version: latest
    - uses: terraform-linters/setup-tflint@v4

    - name: Render terraform docs and push changes back to PR
      id: terraform-docs
      uses: terraform-docs/gh-actions@main
      with:
        find-dir: terragrunt/modules/
        output-file: README.md
        output-method: inject
        git-push: true
        git-commit-message: update terraform docs

    - name: Terraform Format
      id: fmt
      uses: gh640/command-result-action@v1
      with:
        command: terraform fmt -check -recursive -diff
        cwd: terragrunt/modules/
      continue-on-error: true

    - name: Terraform validate
      id: validate
      uses: gh640/command-result-action@v1
      with:
        command: terragrunt run-all validate --terragrunt-no-color -no-color
        cwd: terragrunt/envs/dev/
      continue-on-error: true

    - name: Terraform init
      id: init
      uses: gh640/command-result-action@v1
      with:
        command: terragrunt run-all init --terragrunt-no-color -no-color
        cwd: terragrunt/envs/dev/
      continue-on-error: true

    # - name: Run TFLint
    #   id: tflint
    #   uses: gh640/command-result-action@v1
    #   with:
    #     command: tflint --recursive --format compact
    #     cwd: terragrunt/modules/
    #   continue-on-error: true
    # - run: |
    #     echo "${{ steps.tflint.outputs.stdout }}"
    #     echo "${{ steps.tflint.outputs.stderr }}" >&2

    - name: Run TFLint
      id: tflint
      run: |
        echo "TFLINT_RESULT<<ENND" >> $GITHUB_ENV
        tflint --recursive --format compact 2>&1 >> $GITHUB_ENV || true
        echo "ENND" >> $GITHUB_ENV
      continue-on-error: true
    # - run: echo '${{ toJson(steps.tflint) }}'
    - run: for line in "${{ env.TFLINT_RESULT }}"; do echo "$line"; done
    # - run: echo ${{ env.TFLINT_RESULT }}
    #   env:
    #     TFLINT_RESULT: ${{ env.TFLINT_RESULT }}

    - name: PR comment
      uses: marocchino/sticky-pull-request-comment@v2
      # env:
      #   TFLINT_RESULT2: ${{ env.TFLINT_RESULT }}
      with:
        header: terraform
        hide_and_recreate: true
        # hide: true
        hide_classify: "OUTDATED"
        message: |
          ${{ steps.terraform-docs.outputs.num_changed > 0 && '✅' || '➖' }} terraform docs (number of updated = ${{ steps.terraform-docs.outputs.num_changed }})
          <details>
          <summary>${{ steps.fmt.outputs.exitCode == 0 && '✅' || '❌' }} terraform fmt</summary>

          ```diff
          ${{ steps.fmt.outputs.stderr }}${{ steps.fmt.outputs.stdout }}
          ```

          </details>
          <details>
          <summary>${{ steps.init.outputs.exitCode == 0 && '✅' || '❌' }} terraform init</summary>

          ```
          ${{ steps.init.outputs.stderr }}${{ steps.init.outputs.stdout }}
          ```

          </details>
          <details>
          <summary>${{ steps.validate.outputs.exitCode == 0 && '✅' || '❌' }} terraform validate</summary>

          ```
          ${{ steps.validate.outputs.stderr }}${{ steps.validate.outputs.stdout }}
          ```

          </details>
          <details>
          <summary>${{ steps.tflint.outcome == 'success' && '✅' || '❌' }} terraform tflint</summary>

          ```
          ${{ env.TFLINT_RESULT }}
          ```

          </details>
